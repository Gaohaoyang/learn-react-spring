{"version":3,"sources":["components/BasicsFadeIn.jsx","components/BasicsInnerText.jsx","components/BasicsScrollTop.jsx","components/BasicsInterpolate.jsx","components/BasicsMeasure.jsx","components/BasicsKeyframes.jsx","components/Basics.jsx","components/SpringOverwrite.jsx","components/SpringPassAFun.jsx","components/SpringAsyncScripts.jsx","components/SpringAsyncChain.jsx","components/SpringFlipCard.jsx","components/SpringWithGesture.jsx","components/useSpring.jsx","components/Intro.jsx","App.jsx","serviceWorker.js","index.js"],"names":["BasicsFadeIn","props","useSpring","opacity","from","div","style","BasicsInnerText","number","BasicsScrollTop","scroll","scrollTop","height","overflowY","BasicsInterpolate","color","o","xyz","background","interpolate","value","transform","x","y","z","border","oo","c","padding","range","output","borderColor","n","toFixed","BasicsMeasure","useMeasure","ref","bounds","width","position","Object","keys","map","key","Math","round","BasicsKeyframes","useState","state","setState","config","duration","display","onClick","scale","Basics","className","SpringOverwrite","toggle","setToggle","SpringPassAFun","set","SpringAsyncScripts","to","next","a","SpringAsyncChain","SpringFlipCard","flipped","setFlipped","mass","tension","friction","pre","t","lockScroll","e","preventDefault","SpringWithGesture","bind","useGesture","onDrag","down","movement","mx","my","onDragStart","document","body","addEventListener","passive","onDragEnd","removeEventListener","xx","yy","UseSpring","Intro","App","showContent","setShowContent","boxShadow","s","backgroundImage","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec8a3b37.chunk.js","sourcesContent":["import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nfunction BasicsFadeIn() {\n  const props = useSpring({\n    opacity: 1,\n    from: {\n      opacity: 0,\n    },\n  })\n  return <animated.div style={props}>I will fade in</animated.div>\n}\n\nexport default BasicsFadeIn\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nfunction BasicsInnerText() {\n  const { number } = useSpring({\n    number: 10,\n    from: {\n      number: 0,\n    },\n  })\n  return (\n    <animated.div>\n      { number }\n    </animated.div>\n  )\n}\n\nexport default BasicsInnerText\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nfunction BasicsScrollTop() {\n  const { scroll } = useSpring({\n    scroll: 200,\n    from: {\n      scroll: 0,\n    },\n  })\n  return (\n    <animated.div\n      scrollTop={scroll}\n      style={{\n        height: '100px',\n        overflowY: 'auto',\n      }}\n    >\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur saepe in quae dolorum deleniti recusandae, quisquam perspiciatis quod officia quos, nam aliquam! Neque, tempore voluptatum illo libero quos obcaecati ipsum.\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Iusto doloribus iure alias eum nemo magni aspernatur facere excepturi ducimus esse quidem, sint assumenda aut rem nobis maxime. Numquam, eligendi hic?\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Provident, ex ullam. Voluptatem ad quis maiores alias perspiciatis sunt adipisci hic cum quam labore, laudantium reprehenderit optio molestias exercitationem, sed eaque?\n      </p>\n      <p>\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nostrum voluptates quia soluta suscipit porro dolore laborum tempora, repellendus sunt obcaecati quo a aspernatur reprehenderit doloremque repudiandae. Temporibus optio facere provident!\n      </p>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ipsam quia asperiores quaerat reiciendis magnam perferendis iste veniam atque! Labore assumenda possimus optio veniam maiores culpa distinctio quos accusantium, reiciendis eligendi?\n      </p>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Cum nesciunt, deleniti impedit suscipit laudantium expedita temporibus sapiente harum, sunt cumque architecto est illum quisquam fugiat nostrum quibusdam assumenda ipsam. Rem.\n      </p>\n    </animated.div>\n  )\n}\n\nexport default BasicsScrollTop\n","import React from 'react'\nimport { useSpring, animated, interpolate } from 'react-spring'\n\nfunction BasicsInterpolate() {\n  const {\n    color,\n    o,\n    xyz,\n  } = useSpring({\n    from: {\n      color: '#ef5350',\n      o: 0,\n      xyz: [0, 0, 0],\n    },\n    color: '#283593',\n    o: 1,\n    xyz: [10, 6, 5],\n  })\n\n  return (\n    <animated.div\n      style={{\n        color,\n        background: o.interpolate((value) => `rgba(253, 216, 53, ${value})`),\n        transform: xyz.interpolate((x, y, z) => `translate3d(${x}px, ${y}px, ${z}px)`),\n        border: interpolate([o, color], (oo, c) => `${oo * 5}px solid ${c}`),\n        // You can also form ranges, even chain multiple interpolations\n        padding: o.interpolate({\n          range: [0, 0.8, 1],\n          output: [0, 0, 10],\n        }).interpolate((oo) => `${oo}%`),\n        // Interpolating strings (like up-front) through ranges is allowed ...\n        borderColor: o.interpolate({\n          range: [0, 1],\n          output: ['red', '#ffaabb'],\n        }),\n        // There's also a shortcut for plain, optionless ranges ...\n        opacity: o.interpolate(\n          [0.1, 0.2, 0.6, 1],\n          [1, 0.1, 0.5, 1],\n        ),\n      }}\n    >\n      {\n        o.interpolate((n) => n.toFixed(2))\n      }\n    </animated.div>\n  )\n}\n\nexport default BasicsInterpolate\n","import React, { Fragment } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { animated, useSpring } from 'react-spring'\n\nfunction BasicsMeasure() {\n  const [ref, bounds] = useMeasure()\n  const { opacity } = useSpring({\n    from: {\n      opacity: 1,\n    },\n    opacity: bounds.width < 249 ? 0 : 1,\n  })\n  return (\n    <animated.div\n      ref={ref}\n      style={{\n        position: 'relative',\n        opacity,\n      }}\n    >\n      {Object.keys(bounds).map((key) => (\n        <Fragment key={key}>\n          <span>\n            {\n              key\n            }\n            ---\n          </span>\n          <span>\n            {\n              Math.round(bounds[key])\n            }\n            px\n          </span>\n          <br />\n        </Fragment>\n      ))}\n    </animated.div>\n  )\n}\n\nexport default BasicsMeasure\n","import React, { useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\n\nfunction BasicsKeyframes() {\n  const [state, setState] = useState(true)\n  const { x } = useSpring({\n    x: state ? 1 : 0,\n    from: {\n      x: 0,\n    },\n    config: {\n      duration: 1000,\n    },\n  })\n  return (\n    <div\n      style={{\n        display: 'flex',\n      }}\n    >\n      <animated.div\n        onClick={() => {\n          setState(!state)\n        }}\n        style={{\n          transform: x.interpolate({\n            range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n            output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1],\n          }).interpolate((scale) => `scale(${scale})`),\n        }}\n      >\n        kkkkeyframes click me!\n      </animated.div>\n    </div>\n  )\n}\n\nexport default BasicsKeyframes\n","import React from 'react'\n\nimport BasicsFadeIn from './BasicsFadeIn'\nimport BasicsInnerText from './BasicsInnerText'\nimport BasicsScrollTop from './BasicsScrollTop'\nimport BasicsInterpolate from './BasicsInterpolate'\nimport BasicsMeasure from './BasicsMeasure'\nimport BasicsKeyframes from './BasicsKeyframes'\n\nfunction Basics() {\n  // const [clickKeyframes, setClickKeyframes] = useState(false)\n  // const props = useSpring({\n  //   opacity: 1,\n  //   from: {\n  //     opacity: 0,\n  //   },\n  // })\n  // const numberProps = useSpring({\n  //   number: 1,\n  //   from: {\n  //     number: 0,\n  //   },\n  // })\n  // const keyframes = useSpring({\n  //   x: clickKeyframes ? 1 : 0,\n  // })\n  return (\n    <>\n      <h2>Basics</h2>\n      <div className=\"panel\">\n        <BasicsFadeIn />\n      </div>\n      <div className=\"panel\">\n        <BasicsInnerText />\n      </div>\n      <div className=\"panel\">\n        <BasicsScrollTop />\n      </div>\n      <h2>interpolate</h2>\n      <div className=\"panel\">\n        <BasicsInterpolate />\n      </div>\n      <h2>useResizeAware</h2>\n      <div className=\"panel\">\n        <BasicsMeasure />\n      </div>\n      <h2>Emulating keyframes</h2>\n      <div className=\"panel\">\n        <BasicsKeyframes />\n      </div>\n      {/* <animated.div style={props}>I will fade in</animated.div>\n      <br />\n      <animated.div>{numberProps.number.interpolate((n) => n.toFixed(2))}</animated.div>\n      <br />\n      <animated.div\n        onClick={() => {\n          setClickKeyframes((pre) => !pre)\n        }}\n        style={{\n          transform: keyframes.x\n            .interpolate({\n              range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n              output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1],\n            })\n            .interpolate((x) => `scale(${x})`),\n        }}\n      >\n        keyframes Click me!\n      </animated.div> */}\n    </>\n  )\n}\n\nexport default Basics\n","import React, { useState } from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nfunction SpringOverwrite() {\n  const [toggle, setToggle] = useState(false)\n  const { opacity } = useSpring({\n    opacity: toggle ? 0 : 1,\n  })\n  return (\n    <animated.div\n      onClick={() => {\n        setToggle(!toggle)\n      }}\n      style={{ opacity }}\n    >\n      click me, overwrite values to change the animation\n    </animated.div>\n  )\n}\n\nexport default SpringOverwrite\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nlet toggle = false\n\nfunction SpringPassAFun() {\n  const [{ opacity }, set] = useSpring(() => ({\n    opacity: 1,\n  }))\n  return (\n    <animated.div\n      style={{\n        opacity,\n      }}\n      onClick={() => {\n        set({\n          opacity: toggle ? 1 : 0,\n        })\n        toggle = !toggle\n      }}\n    >\n      click me! SpringPassAFunction\n    </animated.div>\n  )\n}\n\nexport default SpringPassAFun\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nfunction SpringAsyncScripts() {\n  const props = useSpring({\n    to: async (next) => {\n      await next({ opacity: 1, color: '#ffaaee' })\n      await next({ opacity: 0, color: 'rgb(14,26,19)' })\n    },\n    from: { opacity: 0, color: 'red' },\n  })\n\n  return (\n    <animated.div style={props}>I will fade in and out</animated.div>\n  )\n}\n\nexport default SpringAsyncScripts\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nfunction SpringAsyncChain() {\n  const props = useSpring({\n    from: { opacity: 0, color: 'red' },\n    to: [\n      { opacity: 1, color: '#ffaaee' },\n      { opacity: 0, color: 'rgb(14,26,19)' },\n    ],\n  })\n  return (\n    <animated.div style={props}>I will fade in and out (chain)</animated.div>\n  )\n}\n\nexport default SpringAsyncChain\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nimport './SpringFlipCard.css'\n\nfunction SpringFlipCard() {\n  const [flipped, setFlipped] = useState(false)\n  const { transform, opacity } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(1000px) rotateY(${flipped ? -180 : 0}deg)`,\n    config: { mass: 1, tension: 180, friction: 16 },\n  })\n  return (\n    <div\n      onClick={() => {\n        setFlipped((pre) => !pre)\n      }}\n      className=\"wrap\"\n    >\n      <animated.div\n        className=\"card front\"\n        style={{\n          opacity: opacity.interpolate((o) => 1 - o),\n          transform,\n        }}\n      />\n      <animated.div\n        className=\"card back\"\n        style={{\n          opacity,\n          transform: transform.interpolate((t) => `${t} rotateY(-180deg)`),\n        }}\n      />\n    </div>\n  )\n}\n\nexport default SpringFlipCard\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react'\nimport { useGesture } from 'react-use-gesture'\nimport { useSpring, animated, interpolate } from 'react-spring'\n\nimport './SpringWithGesture.css'\n\nconst lockScroll = (e) => {\n  e.preventDefault()\n}\n\nfunction SpringWithGesture() {\n  const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\n\n  // Set the drag hook and define component movement based on gesture data\n  const bind = useGesture({\n    onDrag: ({\n      down,\n      movement: [mx, my],\n    }) => {\n      set({\n        x: down\n          ? mx\n          : 0,\n        y: down\n          ? my\n          : 0,\n      })\n    },\n    onDragStart: () => {\n      document.body.addEventListener('touchmove', lockScroll, { passive: false })\n    },\n    onDragEnd: () => {\n      document.body.removeEventListener('touchmove', lockScroll, { passive: false })\n    },\n  })\n\n  return (\n    <animated.div\n      className=\"springWithGesture\"\n      {...bind()}\n      style={{\n        transform: interpolate([x, y], (xx, yy) => `translateX(${xx}px) translateY(${yy}px)`),\n      }}\n    >\n      drag me\n    </animated.div>\n  )\n}\n\nexport default SpringWithGesture\n","import React from 'react'\n\nimport SpringOverwrite from './SpringOverwrite'\nimport SpringPassAFun from './SpringPassAFun'\nimport SpringAsyncScripts from './SpringAsyncScripts'\nimport SpringAsyncChain from './SpringAsyncChain'\nimport SpringFlipCard from './SpringFlipCard'\nimport SpringWithGesture from './SpringWithGesture'\n// import Spring3DCard from './Spring3DCard'\n\nfunction UseSpring() {\n  return (\n    <>\n      <h2>useSpring</h2>\n      <div className=\"panel\">\n        <SpringOverwrite />\n      </div>\n      <div className=\"panel\">\n        <SpringPassAFun />\n      </div>\n      <h2>SpringAsyncScripts</h2>\n      <div className=\"panel\">\n        <SpringAsyncScripts />\n      </div>\n      <h2>SpringAsyncChain</h2>\n      <div className=\"panel\">\n        <SpringAsyncChain />\n      </div>\n      <h2>Flip Card</h2>\n      <div className=\"panel\">\n        <SpringFlipCard />\n      </div>\n      <h2>SpringWithGesture</h2>\n      <div className=\"panel\">\n        <SpringWithGesture />\n      </div>\n      {/* <h2>Touch 3D Card</h2>\n      <div className=\"panel\">\n        <Spring3DCard />\n      </div> */}\n    </>\n  )\n}\n\nexport default UseSpring\n","import React from 'react'\n\nfunction Intro() {\n  return (\n    <>\n      <h2>Intro</h2>\n      <p>本页面主要是我学习和使用 react-spring 时的一些 demo</p>\n    </>\n  )\n}\n\nexport default Intro\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom'\nimport { useSpring, animated } from 'react-spring'\n\nimport './base.css'\nimport './App.css'\n\nimport Basics from './components/Basics'\nimport UseSpring from './components/useSpring'\nimport Intro from './components/Intro'\n\nfunction App() {\n  const [showContent, setShowContent] = useState(false)\n  const { transform, boxShadow } = useSpring({\n    to: {\n      transform: `translateX(${showContent ? 200 : 0}px)`,\n      boxShadow: `0px 0px 10px 0px rgba(0, 0, 0, ${showContent ? 0.3 : 0})`,\n    },\n    config: { mass: 1, tension: 180, friction: 20 },\n  })\n  return (\n    <Router>\n      <animated.div\n        className=\"content-wrap\"\n        style={{\n          transform,\n          boxShadow,\n        }}\n      >\n        <ul\n          onClick={() => {\n            setShowContent(false)\n          }}\n        >\n          <li>\n            <Link to=\"/\">Intro</Link>\n          </li>\n          <li>\n            <Link to=\"/Basics\">Basics</Link>\n          </li>\n          <li>\n            <Link to=\"/useSpring\">useSpring</Link>\n          </li>\n        </ul>\n      </animated.div>\n      <div\n        className=\"content-show\"\n        onClick={() => {\n          setShowContent((s) => !s)\n        }}\n        style={{\n          backgroundImage: `url(${\n            showContent\n              ? 'https://gw.alicdn.com/tfs/TB1xuKzQoY1gK0jSZFMXXaWcVXa-48-48.png'\n              : 'https://gw.alicdn.com/tfs/TB1r9mShP39YK4jSZPcXXXrUFXa-48-48.png'\n          })`,\n        }}\n      />\n      <div className=\"context-wrap\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Intro />\n          </Route>\n          <Route path=\"/Basics\">\n            <Basics />\n          </Route>\n          <Route path=\"/useSpring\">\n            <UseSpring />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}